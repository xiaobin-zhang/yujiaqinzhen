<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">

<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> -->
<!-- 		<property name="driverClassName" value="#{env['jdbcDriver']}" /> -->
<!-- 		<property name="testOnBorrow" value="#{env['jdbcTestOnBorrow']?: true}"/> -->
<!-- 		<property name="testOnReturn" value="#{env['jdbcTestOnReturn']?: false}"/> -->
<!-- 		<property name="testWhileIdle" value="#{env['jdbcTestWhileIdle']?: true}"/> -->
<!-- 		<property name="validationQuery" value="#{env['jdbcTestSql']}"/> -->
<!-- 		<property name="maxActive" value="#{env['jdbcMaxActive'] ?: 20}"/> -->
<!-- 		<property name="maxIdle" value="#{env['jdbcMaxIdle'] ?: 10 }"/> -->
<!-- 		<property name="minIdle" value="#{env['jdbcMinIdle'] ?: 1 }"/> -->
<!-- 		<property name="minEvictableIdleTimeMillis" value="#{env['jdbcMinEvictableIdleTimeMillis'] ?: 1800000}"/> -->
<!-- 		<property name="url" value="#{env.jdbcUrl}" /> -->
<!-- 		<property name="username" value="#{env.jdbcUsername}" /> -->
<!-- 		<property name="password" value="#{env.jdbcPassword}" /> -->
<!-- 	</bean> -->

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:org/springframework/batch/core/schema-h2.sql"/>
		<jdbc:script location="classpath:/sql/h2-timeout.sql"/>
 		<jdbc:script location="classpath:/sql/update.sql"/> 
 	</jdbc:initialize-database>
 	
 	<bean id="dataSource" class="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean">
		<property name="databaseName" value="dataSource"/>
		<property name="databaseConfigurer">
			<bean class="net.engining.pg.support.utils.H2MvccConfigurer"/>
		</property>
	</bean>
	
	<bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<description>
			定义EntityManagerFactory，用于Spring控制事务。
			具体的Hibernate配置在persistence.xml中控制，包括JPA Provider和Hibernate的各种参数（不含组件扫描)。
			为了避免在JavaEE容器使用默认的persistence.xml进行自动配置JPA，这里额外指定了文件名。
		</description>
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false"/>
				<property name="showSql" value="#{env['hibernateShowSql']?:false}"/>
			</bean>
		</property>
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="emf"/>
    </bean>

	<!-- 事务使用AspectJ进行编译时Weave -->
	<tx:annotation-driven mode="aspectj"/>

</beans>